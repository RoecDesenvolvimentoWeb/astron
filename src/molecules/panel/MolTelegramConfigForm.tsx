import { AtomBtn } from "@atom/AtomBtn";
import { AtomDivLabel } from "@atom/AtomDivLabel";
import { AtomExtraInfo } from "@atom/AtomExtraInfo";
import { AtomForm } from "@atom/AtomForm";
import { AtomLabel } from "@atom/AtomLabel";
import { AtomLoading } from "@atom/AtomLoading";
import { BotConfigurationOutTelegramWithIdiom } from "@org/panel/main/telegram/config/OrgPanelMainContentTelegramConfig";
import { ReactElement, useEffect, useState } from "react";
import { MolIdiomSelector } from "./MolIdiomSelector";

export interface BotConfigurationOutTelegram {
    initialMessage: string
    upperMessage: string
    btnMessage: string
}

interface IMolTelegramConfigFormProps {
    data?: BotConfigurationOutTelegram
    onSubmit: (data: BotConfigurationOutTelegramWithIdiom) => unknown
    onActiveBot: () => unknown
    onIdiomChange: (idiom: Idiom) => unknown
    isLoading?: boolean
}

const INITIAL_DATA: BotConfigurationOutTelegram = {
    initialMessage: "bot desenvolvido por @Asstron",
    upperMessage: "Aproveite conteÃºdos exclusivos ao se tornar um membro! Veja os planos disponÃ­veis clicando no botÃ£o abaixo ðŸ”¥",
    btnMessage: "ðŸŒŸ Canal de assinantes (VIP)"
}

type Target = keyof BotConfigurationOutTelegram
export type Idiom = "PT" | "US"

export const MolTelegramConfigForm = ({ data: botData, onSubmit, onActiveBot, isLoading, onIdiomChange }: IMolTelegramConfigFormProps): ReactElement => {
    const [data, setData] = useState<BotConfigurationOutTelegram>(botData ?? INITIAL_DATA)
    const [idiomInOperation, setIdiomInOperation] = useState<Idiom>("PT")
    const onSomeDataChange = (target: Target, value: string): void => {
        setData({
            ...data,
            [target]: value
        })
    }

    useEffect(() => {
        console.log(botData)
        setData(botData ?? INITIAL_DATA)
    }, [botData])

    useEffect(() => {
        onIdiomChange(idiomInOperation)
    }, [idiomInOperation])
    return (
        <>
            <AtomForm
                onSubmit={(e): void => {
                    e.preventDefault()
                    onSubmit({
                        ...data,
                        idiom: idiomInOperation
                    })
                }}
                className="w-full md:w-[703px] h-fit md:max-h-[900px] bg-white rounded-2xl pt-[42px] px-[30px] pb-[41px] gap-y-[25px]">
                <MolIdiomSelector
                    setIdiomInOperation={setIdiomInOperation}
                />
                <div className="top-6 right-16 absolute">
                    <AtomLoading isInView={!!isLoading}/>
                </div>
                <div className="flex flex-col md:flex-row items-start gap-x-[20px]">
                    <>
                        <svg className="w-1/4 max-w-[90px] md:w-[48px] md:h-[53px]" viewBox="0 0 48 53" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_517_2225)">
                                <path d="M30.7026 40.4449C31.0622 40.9095 31.0601 41.1307 30.6844 41.554C28.9014 43.5615 26.6869 44.7668 23.9862 45.0652C23.9261 45.0716 23.8756 45.0811 23.8617 45.1488C23.1189 45.1488 22.3771 45.1488 21.6343 45.1488C21.3466 44.9425 20.9924 44.9848 20.6704 44.915C18.9336 44.5403 17.4083 43.7646 16.0632 42.627C15.8432 42.4408 15.6918 42.227 15.7552 41.9328C15.8142 41.6619 16.001 41.4799 16.2769 41.4344C18.6921 41.0344 19.5594 38.8618 18.8445 36.6405C18.7983 36.4976 18.7468 36.3569 18.6824 36.1738C18.2316 36.7273 17.8194 37.2638 17.3374 37.7421C16.0246 39.047 14.4928 39.9803 12.6884 40.4671C12.3717 40.5529 12.0658 40.6079 11.8103 40.3592C11.5484 40.1052 11.615 39.7941 11.7127 39.4893C11.7717 39.3041 11.8286 39.1179 11.9177 38.8343C11.689 38.9411 11.5323 39.011 11.3788 39.0872C10.182 39.6883 8.94107 40.1698 7.63257 40.4809C6.82321 40.6735 6.45932 40.3105 6.65575 39.5084C6.97027 38.2162 7.45653 36.9897 8.06623 35.8087C8.14137 35.6627 8.21115 35.5135 8.29809 35.3357C8.01042 35.3262 7.79573 35.4479 7.56816 35.5082C6.87044 35.6923 6.46361 35.3177 6.6418 34.6362C7.08834 32.9218 7.95889 31.4413 9.19333 30.164C9.73648 29.6021 10.3376 29.1068 10.9806 28.6444C8.84661 27.6369 6.24893 28.3174 5.72617 30.818C5.65747 31.144 5.54047 31.4106 5.17335 31.4837C4.82342 31.5535 4.61839 31.344 4.42196 31.109C1.18558 27.2549 1.06643 22.1118 4.19546 18.1571C5.89362 16.012 8.16928 14.7802 10.9119 14.4215C12.8687 14.1654 14.7472 14.4458 16.5377 15.2702C16.7578 15.3718 16.8748 15.3517 17.0272 15.1517C19.1322 12.3949 21.6311 10.0372 24.4735 8.03283C25.0414 7.63176 25.6318 7.26243 26.2168 6.88569C26.7084 6.56928 26.965 6.6169 27.3492 7.07406C27.4662 7.5471 27.1914 7.79896 26.8286 8.02543C24.3179 9.58952 22.0497 11.4404 20.0424 13.6056C16.2833 17.6619 13.7253 22.3552 12.3492 27.6814C12.3095 27.8338 12.302 27.9396 12.4254 28.056C12.9288 28.5322 13.4248 29.0179 13.9228 29.4994C15.6918 31.2572 17.4619 33.0139 19.2288 34.7748C19.3447 34.8912 19.4456 34.9007 19.6056 34.8616C23.969 33.7716 27.9579 31.9006 31.5281 29.1989C36.366 25.5395 39.9373 20.9149 42.2054 15.3168C42.3267 15.0173 42.316 14.8585 42.0187 14.6786C41.0934 14.1199 40.2293 13.4733 39.3856 12.8013C37.5135 11.3081 35.8658 9.59587 34.3372 7.76616C33.7855 6.98623 33.2262 6.21264 32.6885 5.42425C32.5575 5.23271 32.4362 5.2507 32.2655 5.32477C31.5012 5.65495 30.7273 5.96713 29.9716 6.31741C29.5551 6.51107 29.2138 6.49626 28.9132 6.13645C28.7919 5.59145 28.9014 5.38404 29.422 5.13958C32.5285 3.68237 35.7831 2.69925 39.1827 2.19553C40.0425 2.06854 40.912 2.00928 41.775 1.9098C41.8888 1.8971 42.0369 1.97964 42.1131 1.81879C43.2703 1.81879 44.4264 1.82408 45.5835 1.8135C45.7681 1.81138 45.8046 1.84842 45.8036 2.03044C45.7928 3.22944 45.7982 4.42844 45.7982 5.62743C45.5889 6.18407 45.6307 6.77563 45.562 7.35026C45.0672 11.4563 43.8564 15.3453 41.9188 19.0058C39.5777 23.4261 36.3843 27.148 32.3729 30.1809C32.1292 30.3651 32.0755 30.5027 32.2086 30.7947C33.3593 33.3271 33.428 35.905 32.4931 38.5157C32.2902 39.0819 32.1271 39.1845 31.5098 39.1316C31.1105 38.8385 31.1084 38.4797 31.2705 38.0469C32.0669 35.9082 32.0111 33.779 31.1739 31.6561C31.0279 31.2858 30.9184 31.2244 30.5652 31.4593C27.5135 33.489 24.2073 34.9727 20.6564 35.9251C20.0575 36.086 20.0618 36.0828 20.2077 36.6691C20.5985 38.2374 20.4428 39.7126 19.4338 41.0396C19.0184 41.5868 18.4699 41.9773 17.8688 42.3032C17.902 42.3529 17.9138 42.3805 17.9342 42.3984C17.9654 42.426 18.0019 42.4492 18.0384 42.4725C19.9394 43.6493 22.0036 44.0842 24.2181 43.7456C26.3692 43.4165 28.1715 42.4344 29.6045 40.81C29.9008 40.4682 30.2131 40.211 30.7026 40.4449ZM4.77404 29.4381C6.01385 27.3247 7.83759 26.6231 10.168 27.0168C10.4718 27.0686 10.8206 27.3311 11.06 27.1522C11.2983 26.9745 11.2779 26.5649 11.3692 26.2559C12.3599 22.8907 13.8198 19.7403 15.8024 16.8301C15.942 16.6248 16.1062 16.4597 15.7144 16.3073C13.0791 15.2787 10.4643 15.3147 7.99539 16.6851C4.48207 18.6344 2.93741 21.6832 3.31955 25.6442C3.44943 27.0051 3.9518 28.2623 4.77404 29.4381ZM44.4951 3.98185C44.4951 3.84111 44.4757 3.69718 44.4983 3.55961C44.5605 3.18287 44.4156 3.07705 44.0335 3.0961C43.1372 3.13949 42.2409 3.17864 41.3456 3.25272C38.8929 3.45379 36.5013 3.93952 34.1558 4.67289C33.8295 4.77554 33.8671 4.8729 34.0184 5.09619C36.2866 8.43814 39.1129 11.2277 42.4942 13.4722C42.7422 13.6373 42.8216 13.6151 42.9182 13.3199C43.9143 10.2816 44.4038 7.16507 44.4951 3.98185ZM8.16284 38.9941C8.28951 38.9602 8.36894 38.9422 8.44515 38.9179C9.88676 38.4459 11.2232 37.758 12.5156 36.9802C12.814 36.8003 13.106 36.6723 13.4216 36.9156C13.7307 37.1538 13.6996 37.4607 13.6019 37.7972C13.4999 38.1485 13.3303 38.4893 13.3153 38.9052C15.1766 38.1496 16.5484 36.8966 17.6648 35.3346C17.785 35.1653 17.711 35.0933 17.6036 34.9886C15.8056 33.216 14.0087 31.4424 12.2161 29.6635C12.0798 29.528 11.9971 29.5143 11.8297 29.6317C10.9301 30.2667 10.109 30.9831 9.43914 31.854C8.96147 32.4752 8.53747 33.1303 8.2573 33.9441C8.67487 33.8234 9.03017 33.7324 9.37689 33.6192C9.71501 33.5091 10.0274 33.4933 10.2668 33.7991C10.5115 34.1123 10.3838 34.4034 10.1959 34.6933C9.65812 35.5251 9.20943 36.4056 8.79187 37.2998C8.54283 37.83 8.31419 38.3707 8.16284 38.9941Z" fill="#32063D"/>
                                <path d="M28.9111 6.13757C29.2117 6.49737 29.553 6.51113 29.9695 6.31853C30.7252 5.96825 31.4992 5.65712 32.2634 5.32589C32.4352 5.25181 32.5565 5.23488 32.6864 5.42537C33.2242 6.21376 33.7834 6.9884 34.3351 7.76727C34.2965 7.90485 34.1666 7.9567 34.0646 8.02125C33.091 8.64139 32.169 9.33031 31.2448 10.0182C31.1181 10.1124 30.9807 10.1854 30.9743 10.3653C30.7746 10.3632 30.576 10.3632 30.3764 10.36C28.8607 10.3335 27.4749 10.7431 26.2501 11.6235C24.3598 12.9813 23.4291 14.848 23.3368 17.1391C23.1715 17.1402 23.0878 17.2651 22.9923 17.3656C22.711 17.663 22.4459 17.9752 22.1593 18.2662C21.2694 19.1731 20.4461 20.1393 19.6432 21.1182C18.0341 23.078 16.5281 25.1162 15.1971 27.274C14.7473 28.0021 14.2299 28.6942 13.9218 29.5016C13.4238 29.0201 12.9278 28.5344 12.4244 28.0582C12.301 27.9418 12.3085 27.8349 12.3482 27.6835C13.7243 22.3574 16.2812 17.664 20.0414 13.6078C22.0477 11.4426 24.3169 9.59275 26.8276 8.0276C27.1915 7.80114 27.4652 7.54822 27.3482 7.07624C27.359 6.98734 27.3976 6.90374 27.476 6.86776C27.9633 6.64341 28.3927 6.30583 28.9111 6.13757Z" fill="#AB38C1"/>
                                <path d="M30.7015 40.4449C30.2131 40.21 29.8997 40.4682 29.5981 40.81C28.165 42.4344 26.3628 43.4165 24.2116 43.7456C21.9961 44.0842 19.9329 43.6493 18.0319 42.4725C17.9954 42.4503 17.96 42.427 17.9278 42.3984C17.9074 42.3804 17.8956 42.3529 17.8623 42.3032C18.4623 41.9772 19.0109 41.5857 19.4274 41.0396C20.4364 39.7126 20.5931 38.2374 20.2013 36.6691C20.0553 36.0817 20.0499 36.086 20.65 35.9251C24.2009 34.9727 27.5081 33.489 30.5588 31.4593C30.9119 31.2244 31.0214 31.2857 31.1674 31.6561C32.0058 33.7779 32.0616 35.9071 31.264 38.0469C31.1019 38.4808 31.1041 38.8385 31.5034 39.1316C31.2672 39.5888 31.0429 40.0512 30.7015 40.4449Z" fill="#B8AEFF"/>
                                <path d="M30.9724 10.3653C30.98 10.1854 31.1163 10.1124 31.243 10.0182C32.1672 9.33031 33.0903 8.64139 34.0628 8.02125C34.1648 7.9567 34.2947 7.90485 34.3333 7.76727C35.8619 9.59699 37.5096 11.3092 39.3817 12.8024C40.2254 13.4744 41.0895 14.121 42.0148 14.6798C42.3121 14.8597 42.3228 15.0184 42.2015 15.3179C39.9345 20.916 36.3621 25.5406 31.5242 29.2C27.954 31.9017 23.9641 33.7727 19.6017 34.8627C19.4428 34.9029 19.3419 34.8923 19.2249 34.7759C17.4591 33.015 15.689 31.2583 13.9189 29.5006C14.2281 28.6931 14.7455 28.001 15.1942 27.2729C16.5263 25.1162 18.0312 23.078 19.6403 21.1171C20.4432 20.1393 21.2665 19.172 22.1564 18.2651C22.443 17.973 22.7081 17.6619 22.9894 17.3645C23.0838 17.264 23.1686 17.1391 23.334 17.1381C23.3576 17.6027 23.3866 18.0662 23.4875 18.5223C24.2936 22.1457 27.5246 24.3892 31.2515 23.913C34.0757 23.5521 36.375 21.4018 37.0169 18.5212C37.6137 15.8417 36.3084 12.8458 33.9287 11.3971C33.0173 10.8404 32.0223 10.5325 30.9724 10.3653Z" fill="#D350EB"/>
                                <path d="M4.77408 29.4382C3.95291 28.2624 3.45055 27.0052 3.31852 25.6433C2.93638 21.6833 4.48104 18.6334 7.99436 16.6841C10.4632 15.3148 13.0792 15.2777 15.7134 16.3063C16.1052 16.4598 15.942 16.6238 15.8014 16.8291C13.8188 19.7393 12.3589 22.8897 11.3681 26.2549C11.2769 26.564 11.2973 26.9735 11.059 27.1513C10.8196 27.3301 10.4707 27.0666 10.167 27.0158C7.83764 26.6232 6.01282 27.3248 4.77408 29.4382Z" fill="#B8AEFF"/>
                                <path d="M44.4943 3.98202C44.4042 7.16629 43.9136 10.2828 42.9175 13.3179C42.8198 13.6142 42.7414 13.6354 42.4935 13.4703C39.1122 11.2268 36.2869 8.43619 34.0177 5.09424C33.8663 4.87095 33.8288 4.77359 34.1551 4.67094C36.5005 3.93757 38.8921 3.45183 41.3449 3.25077C42.2401 3.17775 43.1364 3.13753 44.0328 3.09415C44.4138 3.07616 44.5587 3.18092 44.4975 3.55766C44.475 3.69629 44.4943 3.84021 44.4943 3.98202Z" fill="#B8AEFF"/>
                                <path d="M8.16211 38.9941C8.31346 38.3707 8.54318 37.83 8.79006 37.3009C9.20763 36.4066 9.65632 35.5262 10.1941 34.6944C10.382 34.4044 10.5097 34.1124 10.2649 33.8002C10.0256 33.4943 9.71321 33.5091 9.37508 33.6203C9.02836 33.7335 8.67306 33.8256 8.2555 33.9451C8.53566 33.1314 8.95966 32.4763 9.43734 31.8551C10.1072 30.9831 10.9283 30.2677 11.8279 29.6328C11.9953 29.5143 12.079 29.5291 12.2143 29.6645C14.0069 31.4424 15.8038 33.216 17.6018 34.9896C17.7081 35.0944 17.7832 35.1664 17.663 35.3357C16.5466 36.8977 15.1748 38.1506 13.3135 38.9062C13.3296 38.4903 13.4981 38.1496 13.6001 37.7982C13.6978 37.4617 13.7289 37.1548 13.4197 36.9167C13.1042 36.6733 12.8122 36.8014 12.5138 36.9813C11.2214 37.7591 9.88496 38.4469 8.44335 38.9189C8.36713 38.9422 8.28877 38.9602 8.16211 38.9941Z" fill="#D3D6D9"/>
                                <path d="M30.9703 10.3652C32.0191 10.5324 33.0141 10.8393 33.9287 11.396C36.3085 12.8447 37.6138 15.8406 37.0169 18.5201C36.375 21.4007 34.0757 23.551 31.2516 23.9119C27.5246 24.3881 24.2926 22.1446 23.4875 18.5212C23.3866 18.0651 23.3576 17.6016 23.334 17.137C23.4263 14.8459 24.357 12.9791 26.2473 11.6214C27.472 10.7409 28.8578 10.3314 30.3735 10.3578C30.5721 10.3631 30.7717 10.3642 30.9703 10.3652ZM30.2672 11.6383C27.1736 11.632 24.6479 14.1136 24.6425 17.1656C24.6371 20.2091 27.1704 22.714 30.2533 22.714C33.3201 22.714 35.8372 20.2345 35.8512 17.2005C35.8651 14.1432 33.3566 11.6447 30.2672 11.6383Z" fill="#030302"/>
                                <path d="M30.2683 11.6383C33.3576 11.6446 35.8673 14.1431 35.8523 17.2004C35.8372 20.2344 33.3211 22.7128 30.2544 22.7139C27.1715 22.7139 24.6382 20.2101 24.6436 17.1655C24.6489 14.1135 27.1747 11.6319 30.2683 11.6383ZM30.2651 12.3822C27.5729 12.3769 25.4089 14.4892 25.3971 17.1359C25.3842 19.8101 27.5386 21.9615 30.234 21.9668C32.9422 21.9721 35.1009 19.8429 35.0987 17.1687C35.0966 14.5093 32.954 12.3886 30.2651 12.3822Z" fill="#AB38C0"/>
                                <path d="M30.2635 12.3822C32.9525 12.3875 35.095 14.5093 35.0972 17.1676C35.0993 19.8418 32.9396 21.9721 30.2324 21.9657C27.537 21.9604 25.3837 19.809 25.3956 17.1348C25.4074 14.4902 27.5714 12.3769 30.2635 12.3822ZM30.2399 13.6669C28.3024 13.6733 26.7051 15.2469 26.6923 17.1602C26.6794 19.0714 28.3185 20.6937 30.256 20.6863C32.2064 20.6789 33.8155 19.0693 33.7983 17.1443C33.7801 15.2278 32.1764 13.6595 30.2399 13.6669Z" fill="#030302"/>
                                <path d="M30.2422 13.6669C32.1776 13.6605 33.7823 15.2278 33.7995 17.1443C33.8177 19.0693 32.2076 20.6789 30.2572 20.6863C28.3207 20.6937 26.6816 19.0714 26.6934 17.1602C26.7074 15.2469 28.3057 13.6732 30.2422 13.6669Z" fill="#D3D6D9"/>
                                <path opacity="0.16" d="M7.71484 51.0726C7.71484 51.6396 9.38582 52.1834 12.3602 52.5844C15.3345 52.9853 19.3686 53.2106 23.575 53.2106C27.7814 53.2106 31.8155 52.9853 34.7899 52.5844C37.7642 52.1834 39.4352 51.6396 39.4352 51.0726C39.4352 50.5055 37.7642 49.9617 34.7899 49.5608C31.8155 49.1598 27.7814 48.9346 23.575 48.9346C19.3686 48.9346 15.3345 49.1598 12.3602 49.5608C9.38582 49.9617 7.71484 50.5055 7.71484 51.0726Z" fill="#505050"/>
                            </g>
                            <defs>
                                <clipPath id="clip0_517_2225">
                                    <rect width="48" height="53" fill="white"/>
                                </clipPath>
                            </defs>
                        </svg>
                    </>
                    <div className="w-full md:w-[576px] text-gray-800 text-base md:text-lg font-normal font-['Geologica'] leading-[25.20px]">Aqui, vocÃª tem o poder de personalizar os botÃµes iniciais que os usuÃ¡rios visualizarÃ£o ao digitar "/start" no seu bot. Sinta-se Ã  vontade para liberar sua criatividade na ediÃ§Ã£o!</div>
                </div>
                <AtomDivLabel className="w-full">
                    <div className="flex flex-row justify-between w-full">
                        <AtomLabel className="text-[#9EA1A2]">Mensagem inicial</AtomLabel>
                        <AtomExtraInfo message="Mensagem que aparecera quando digitado /start"/>
                    </div>
                    <textarea
                        onChange={(data): void => {
                            onSomeDataChange("initialMessage", data.target.value)
                        }}
                        className="resize-none px-[23px] py-[14px] w-full h-[120px] rounded-[16px] bg-[#FBFBFB] text-[#76747E] text-[14px]"
                        value={data.initialMessage}
                    />
                </AtomDivLabel>
                <AtomDivLabel className="w-full">
                    <div className="flex flex-row justify-between w-full">
                        <AtomLabel className="text-[#9EA1A2]">Mensagem superior</AtomLabel>
                        <AtomExtraInfo message="Mensagem superior"/>
                    </div>
                    <textarea
                        onChange={(data): void => {
                            onSomeDataChange("upperMessage", data.target.value)
                        }}
                        className="resize-none px-[23px] py-[14px] w-full h-[120px] rounded-[16px] bg-[#FBFBFB] text-[#76747E] text-[14px]"
                        value={data.upperMessage}
                    />
                </AtomDivLabel>
                <AtomDivLabel className="w-full">
                    <div className="flex flex-row justify-between w-full">
                        <AtomLabel className="text-[#9EA1A2]">Mensagem do botÃ£o</AtomLabel>
                        <AtomExtraInfo message="Mensagem do botÃ£o"/>
                    </div>
                    <textarea
                        onChange={(data): void => {
                            onSomeDataChange("btnMessage", data.target.value)
                        }}
                        className="resize-none px-[23px] py-[14px] w-full h-[120px] rounded-[16px] bg-[#FBFBFB] text-[#76747E] text-[14px]"
                        value={data.btnMessage}
                    />
                </AtomDivLabel>
                <div className="flex w-full flex-col md:flex-row md:justify-between text-[18px] font-geo gap-y-4">
                    <AtomBtn
                        btnType="submit"
                        className="bg-gradient-to-r from-lilas-lv1 to-lilas-lv5 w-full md:w-[164px] md:max-w-[164px]"
                    >Salvar</AtomBtn>
                    <AtomBtn
                        onClick={onActiveBot}
                        btnType="button"
                        className="text-[#6C037D] border-[#6C037D] border-[1px] flex flex-row items-center justify-center gap-x-2 min-w-fit w-full md:w-[164px]">
                        <span className="text-[#6C037D]">Ativar bot</span>
                        <>
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g clip-path="url(#clip0_517_2217)">
                                    <path d="M20.2346 5.686C20.6666 4.491 19.5086 3.333 18.3136 3.766L3.70855 9.048C2.50955 9.482 2.36455 11.118 3.46755 11.757L8.12955 14.456L12.2926 10.293C12.4812 10.1108 12.7338 10.01 12.996 10.0123C13.2582 10.0146 13.509 10.1198 13.6944 10.3052C13.8798 10.4906 13.9849 10.7414 13.9872 11.0036C13.9895 11.2658 13.8887 11.5184 13.7066 11.707L9.54355 15.87L12.2436 20.532C12.8816 21.635 14.5176 21.489 14.9516 20.291L20.2346 5.686Z" fill="#6C037D"/>
                                </g>
                                <defs>
                                    <clipPath id="clip0_517_2217">
                                        <rect width="24" height="24" fill="white"/>
                                    </clipPath>
                                </defs>
                            </svg>
                        </>
                    </AtomBtn>
                </div>
            </AtomForm>
        </>
    )
}